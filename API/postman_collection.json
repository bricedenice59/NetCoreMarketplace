{
	"info": {
		"_postman_id": "622bf4bf-68dc-4f54-9c67-a08cebad47f8",
		"name": "SkiNet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24173064"
	},
	"item": [
		{
			"name": "Section 2 - API Basics",
			"item": [
				{
					"name": "Get Weather Forecast",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/weatherforecast",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"weatherforecast"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImJvYkB0ZXN0LmNvbSIsImdpdmVuX25hbWUiOiJCb2IiLCJuYmYiOjE2NzUxMzIxNjgsImV4cCI6MTY3NTEzMjIyOCwiaWF0IjoxNjc1MTMyMTY4LCJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo3MTIwLyJ9.srpsH_AROBeuOEVMZZ3x-YX7AncBQJES2voao-XMuYMbKOmb91fYt5tUX2v_QgkiRSBNJi9X4pPZcnYEICfqwA",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://localhost:7120/api/products",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/api/products/2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"products",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 3 - Architecture",
			"item": [
				{
					"name": "Get Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product stock",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products/brands",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products",
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/products/brands",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products",
								"brands"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 4 - Genrics",
			"item": [
				{
					"name": "Get Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products/a4a7051c-04e3-4f89-a8b7-538fca56d316",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products",
								"a4a7051c-04e3-4f89-a8b7-538fca56d316"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products/types",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products",
								"types"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 5 - Error Handling",
			"item": [
				{
					"name": "Get Not Found Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/buggy/notfound",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"buggy",
								"notfound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Null Ref Error",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/buggy/servererror",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"buggy",
								"servererror"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bad Request",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/buggy/servererror",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"buggy",
								"servererror"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Bad Request Validation Error",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/buggy/badrequest/04cf6f9f4e7c12",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"buggy",
								"badrequest",
								"04cf6f9f4e7c12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Divide By Zero Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/buggy/maths",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"buggy",
								"maths"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Not Found Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/endpointthatdoesnotexist",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"endpointthatdoesnotexist"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 6 - Paging, Sorting and Filtering",
			"item": [
				{
					"name": "GetProducts sorted by name (default case)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProducts sorted by Price Ascending",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products?sortBy=priceAsc",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "priceAsc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetProducts sorted by Price Descending",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products?sortBy=priceDesc",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "priceDesc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products by Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products?typeId=18c8f014-3b41-450c-9e1f-cf1aa40bc183",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "typeId",
									"value": "18c8f014-3b41-450c-9e1f-cf1aa40bc183"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Paged Products Page 0 Size 5",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7120/api/products?pageSize=1&pageIndex=1&searchCriteria=ip",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "1"
								},
								{
									"key": "pageIndex",
									"value": "1"
								},
								{
									"key": "searchCriteria",
									"value": "ip"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Paged Products by Brand And Type Sorted by price desc",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Origin",
								"value": "https://localhost:4200",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/api/products?typeId=3&brandId=2&sort=priceDesc",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "typeId",
									"value": "3"
								},
								{
									"key": "brandId",
									"value": "2"
								},
								{
									"key": "sort",
									"value": "priceDesc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Cors is enabled",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Origin",
								"value": "https://localhost:7120",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://localhost:7120/api/products",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 13 - Basket",
			"item": [
				{
					"name": "Get Basket",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://localhost:7120/api/basket?id=fac2f8cc-c871-4e3d-acaa-a4f61fe03c87",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"basket"
							],
							"query": [
								{
									"key": "id",
									"value": "fac2f8cc-c871-4e3d-acaa-a4f61fe03c87"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Basket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"fac2f8cc-c871-4e3d-acaa-a4f61fe03c87\",\n  \"items\": [\n    {\n      \"id\": \"3025eab8-a5fc-486d-a65e-59619c4cb83b\",\n      \"productName\": \".NET Black & White Mug\",\n      \"price\": 8.22,\n      \"quantity\": 32,\n      \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n      \"productType\": \"USB Memory Stick\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/basket",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"basket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Basket",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/basket?id=b2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							],
							"query": [
								{
									"key": "id",
									"value": "b2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 15 - Identity",
			"item": [
				{
					"name": "Login as Bob and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('firstName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('bob_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"bob@test.com\",\n    \"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Bob bad password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"bob@test.com\",\n\t\"password\": \"BadPassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register as Tom and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"Tom\",\n\t\"email\": \"tom@test.com\",\n\t\"password\": \"Pa$$w0rd!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/register",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Tom and save token to env",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"tom@test.com\",\n\t\"password\": \"Pa$$w0rd!!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Secret from buggy (return 401)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/buggy/testauth",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"buggy",
								"testauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Secret from buggy With Auth",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/buggy/testauth",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"buggy",
								"testauth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current User (bob)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{tom_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if email exists",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/emailExists?email=bob@test.com",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"emailExists"
							],
							"query": [
								{
									"key": "email",
									"value": "bob@test.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Address (bob)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{tom_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/address",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Address (bob)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"1\",\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Bobbity\",\n  \"street\": \"10 Brice street\",\n  \"city\": \"New York\",\n  \"state\": \"NY\",\n  \"zipCode\": \"90250\",\n  \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/address",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User Address (tom)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{tom_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"2\",\n  \"firstName\": \"Tom\",\n  \"lastName\": \"Smith\",\n  \"street\": \"100 Park Lane\",\n  \"city\": \"London\",\n  \"state\": \"London\",\n  \"zipCode\": \"SW1 1B\",\n  \"country\": \"UK\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7120/api/Accounts/address",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7120",
							"path": [
								"api",
								"Accounts",
								"address"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 16 - Validation",
			"item": [
				{
					"name": "Update User Address (tom) - Empty Address",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{tom_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Tom\",\n  \"lastName\": \"Smith\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/address",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register as Luke with empty password (will return 400)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"Luke\",\n\t\"email\": \"anotherbademailaddress\",\n\t\"password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register as Luke with empty email and password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"Luke\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register as Luke with bad email address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const user = pm.response.json();",
									"",
									"pm.test(\"Has properties\", function () {",
									"    pm.expect(user).to.have.property('displayName');",
									"    pm.expect(user).to.have.property('email');",
									"    pm.expect(user).to.have.property('token');",
									"});",
									"",
									"if (pm.test(\"Has properties\")) {",
									"    pm.globals.set('tom_token', user.token);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"\",\n\t\"email\": \"notanemail\",\n\t\"password\": \"Pa$$w0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/account/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Basket Zero Quantity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"basket1\",\n  \"basketItems\": [\n    {\n      \"id\": 4,\n      \"productName\": \".NET Black & White Mug\",\n      \"price\": 0,\n      \"quantity\": 0,\n      \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n      \"brand\": \".NET\",\n      \"type\": \"USB Memory Stick\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/basket",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 18 - Ordering",
			"item": [
				{
					"name": "Update Basket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"order1\",\n    \"items\": [\n        {\n            \"id\": 4,\n            \"productName\": \".NET Black & White Mug\",\n            \"price\": 1,\n            \"quantity\": 2,\n            \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n            \"brand\": \".NET\",\n            \"type\": \"USB Memory Stick\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/basket",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Checkout as bob order1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"basketId\": \"order1\",\n  \"deliveryMethodId\": 1,\n  \"shipToAddress\": \n    {\n      \"firstName\": \"Bob\",\n      \"lastName\": \"Bobbity\",\n      \"street\": \"10 The Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"country\": \"USA\",\n      \"zipcode\": \"90250\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders For User (bob)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{bob_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order For User (bob)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/orders/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Section 20 - Payments",
			"item": [
				{
					"name": "Create Basket",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"order2\",\n    \"items\": [\n        {\n            \"id\": 4,\n            \"productName\": \".NET Black & White Mug\",\n            \"price\": 8.5,\n            \"quantity\": 20,\n            \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n            \"brand\": \".NET\",\n            \"type\": \"USB Memory Stick\"\n        }\n    ],\n    \"deliveryMethodId\": 2,\n    \"clientSecret\": \"pi_1G5975BMsPE8xicURv2SKARI_secret_FEfsGr067ahgWalLGmPCGsq3r\",\n    \"paymentIntentId\": \"pi_1G5975BMsPE8xicURv2SKARI\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/basket",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create payment intent as bob",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{bob_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/payments/order2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"payments",
								"order2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update payment intent as bob",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/payments/order2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"payments",
								"order2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Basket with client secret as bob",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{bob_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"order1\",\n    \"items\": [\n        {\n            \"id\": 4,\n            \"productName\": \".NET Black & White Mug\",\n            \"price\": 8.5,\n            \"quantity\": 3,\n            \"pictureUrl\": \"https://localhost:5001/images/products/2.png\",\n            \"brand\": \".NET\",\n            \"type\": \"USB Memory Stick\"\n        }\n    ],\n    \"deliveryMethodId\": null,\n    \"clientSecret\": \"pi_1G58xoBMsPE8xicUEzksgfsT\",\n    \"paymentIntentId\": \"pi_1G58xoBMsPE8xicUEzksgfsT\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/basket",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"basket"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://localhost:5001",
			"type": "string"
		}
	]
}